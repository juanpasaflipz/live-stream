// src/media/errors.ts
var STREAM_OPEN_ERROR_MESSAGE = "stream open failed";
var STREAM_OFFLINE_ERROR_MESSAGE = "stream is offline";
var STREAM_WAITING_FOR_DATA_ERROR_MESSAGE = "stream is waiting for data";
var ACCESS_CONTROL_ERROR_MESSAGE = "shutting down since this session is not allowed to view this stream";
var BFRAMES_ERROR_MESSAGE = "metadata indicates that webrtc playback contains bframes";
var NOT_ACCEPTABLE_ERROR_MESSAGE = "response indicates unacceptable playback protocol";
var PERMISSIONS_ERROR_MESSAGE = "user did not allow the permissions request";
var isStreamOfflineError = (error) => error.message.toLowerCase().includes(STREAM_OPEN_ERROR_MESSAGE) || error.message.toLowerCase().includes(STREAM_WAITING_FOR_DATA_ERROR_MESSAGE) || error.message.toLowerCase().includes(STREAM_OFFLINE_ERROR_MESSAGE);
var isAccessControlError = (error) => error.message.toLowerCase().includes(ACCESS_CONTROL_ERROR_MESSAGE);
var isBframesError = (error) => error.message.toLowerCase().includes(BFRAMES_ERROR_MESSAGE);
var isNotAcceptableError = (error) => error.message.toLowerCase().includes(NOT_ACCEPTABLE_ERROR_MESSAGE);
var isPermissionsError = (error) => error.message.toLowerCase().includes(PERMISSIONS_ERROR_MESSAGE);
export {
  ACCESS_CONTROL_ERROR_MESSAGE,
  BFRAMES_ERROR_MESSAGE,
  NOT_ACCEPTABLE_ERROR_MESSAGE,
  PERMISSIONS_ERROR_MESSAGE,
  STREAM_OFFLINE_ERROR_MESSAGE,
  STREAM_OPEN_ERROR_MESSAGE,
  isAccessControlError,
  isBframesError,
  isNotAcceptableError,
  isPermissionsError,
  isStreamOfflineError
};
//# sourceMappingURL=index.js.map