"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/storage.ts
var storage_exports = {};
__export(storage_exports, {
  createStorage: () => createStorage,
  noopStorage: () => noopStorage
});
module.exports = __toCommonJS(storage_exports);

// src/media/storage.ts
var noopStorage = {
  getItem: (_key) => "",
  setItem: (_key, _value) => {
  },
  removeItem: (_key) => {
  }
};
function createStorage({
  storage = noopStorage,
  key: prefix = "livepeer"
}) {
  return {
    getItem: async (key, defaultState = null) => {
      try {
        const value = await storage.getItem(`${prefix}.${key}`);
        return value ? JSON.parse(value) : defaultState;
      } catch (error) {
        console.warn(error);
        return defaultState;
      }
    },
    setItem: async (key, value) => {
      if (value === null) {
        await storage.removeItem(`${prefix}.${key}`);
      } else {
        try {
          await storage.setItem(`${prefix}.${key}`, JSON.stringify(value));
        } catch (err) {
          console.error(err);
        }
      }
    },
    removeItem: async (key) => storage.removeItem(`${prefix}.${key}`)
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createStorage,
  noopStorage
});
//# sourceMappingURL=index.cjs.map