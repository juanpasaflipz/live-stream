"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  ACCESS_CONTROL_ERROR_MESSAGE: () => import_errors.ACCESS_CONTROL_ERROR_MESSAGE,
  BFRAMES_ERROR_MESSAGE: () => import_errors.BFRAMES_ERROR_MESSAGE,
  NOT_ACCEPTABLE_ERROR_MESSAGE: () => import_errors.NOT_ACCEPTABLE_ERROR_MESSAGE,
  PERMISSIONS_ERROR_MESSAGE: () => import_errors.PERMISSIONS_ERROR_MESSAGE,
  STREAM_OFFLINE_ERROR_MESSAGE: () => import_errors.STREAM_OFFLINE_ERROR_MESSAGE,
  STREAM_OPEN_ERROR_MESSAGE: () => import_errors.STREAM_OPEN_ERROR_MESSAGE,
  b64Decode: () => import_utils.b64Decode,
  b64Encode: () => import_utils.b64Encode,
  b64UrlDecode: () => import_utils.b64UrlDecode,
  b64UrlEncode: () => import_utils.b64UrlEncode,
  createControllerStore: () => import_media.createControllerStore,
  createStorage: () => import_storage.createStorage,
  deepMerge: () => import_utils.deepMerge,
  getMediaSourceType: () => import_media.getMediaSourceType,
  isAccessControlError: () => import_errors.isAccessControlError,
  isBframesError: () => import_errors.isBframesError,
  isNotAcceptableError: () => import_errors.isNotAcceptableError,
  isPermissionsError: () => import_errors.isPermissionsError,
  isStreamOfflineError: () => import_errors.isStreamOfflineError,
  noopStorage: () => import_storage.noopStorage,
  omit: () => import_utils.omit,
  pick: () => import_utils.pick,
  version: () => import_version.version
});
module.exports = __toCommonJS(src_exports);
var import_errors = require("@livepeer/core/errors");
var import_media = require("@livepeer/core/media");
var import_storage = require("@livepeer/core/storage");
var import_utils = require("@livepeer/core/utils");
var import_version = require("@livepeer/core/version");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ACCESS_CONTROL_ERROR_MESSAGE,
  BFRAMES_ERROR_MESSAGE,
  NOT_ACCEPTABLE_ERROR_MESSAGE,
  PERMISSIONS_ERROR_MESSAGE,
  STREAM_OFFLINE_ERROR_MESSAGE,
  STREAM_OPEN_ERROR_MESSAGE,
  b64Decode,
  b64Encode,
  b64UrlDecode,
  b64UrlEncode,
  createControllerStore,
  createStorage,
  deepMerge,
  getMediaSourceType,
  isAccessControlError,
  isBframesError,
  isNotAcceptableError,
  isPermissionsError,
  isStreamOfflineError,
  noopStorage,
  omit,
  pick,
  version
});
//# sourceMappingURL=index.cjs.map